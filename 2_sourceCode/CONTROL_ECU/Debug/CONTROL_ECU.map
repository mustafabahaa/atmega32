Archive member included because of file (symbol)

c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./MCAL/port/port.o
LOAD ./MCAL/e_interrupt/e_interrupt.o
LOAD ./MCAL/GPIO/gpio.o
LOAD ./HAL/LED/led.o
LOAD ./HAL/BUTTON/button.o
LOAD ./main.o
LOAD c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xaf0
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000060        0x8 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x00000068        0x4 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000068                __vector_1
                0x00000068                __vector_12
                0x00000068                __bad_interrupt
                0x00000068                __vector_6
                0x00000068                __vector_3
                0x00000068                __vector_11
                0x00000068                __vector_13
                0x00000068                __vector_17
                0x00000068                __vector_19
                0x00000068                __vector_7
                0x00000068                __vector_5
                0x00000068                __vector_4
                0x00000068                __vector_9
                0x00000068                __vector_2
                0x00000068                __vector_15
                0x00000068                __vector_8
                0x00000068                __vector_14
                0x00000068                __vector_10
                0x00000068                __vector_16
                0x00000068                __vector_18
                0x00000068                __vector_20
 .text          0x0000006c        0x0 ./MCAL/port/port.o
 .text          0x0000006c        0x0 ./MCAL/e_interrupt/e_interrupt.o
 .text          0x0000006c        0x0 ./MCAL/GPIO/gpio.o
 .text          0x0000006c        0x0 ./HAL/LED/led.o
 .text          0x0000006c        0x0 ./HAL/BUTTON/button.o
 .text          0x0000006c        0x0 ./main.o
 .text          0x0000006c        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x0000006c                . = ALIGN (0x2)
 *(.text.*)
 .text.mcal_port_init
                0x0000006c       0xb6 ./MCAL/port/port.o
                0x0000006c                mcal_port_init
 .text.mcal_port_write
                0x00000122       0x4c ./MCAL/port/port.o
                0x00000122                mcal_port_write
 .text.mcal_port_read
                0x0000016e       0x52 ./MCAL/port/port.o
                0x0000016e                mcal_port_read
 .text.mcal_interrupt_initialize
                0x000001c0      0x1e8 ./MCAL/e_interrupt/e_interrupt.o
                0x000001c0                mcal_interrupt_initialize
 .text.mcal_interrupt_read_flag
                0x000003a8       0xbc ./MCAL/e_interrupt/e_interrupt.o
                0x000003a8                mcal_interrupt_read_flag
 .text.mcal_interrupt_clear_flag
                0x00000464       0x7e ./MCAL/e_interrupt/e_interrupt.o
                0x00000464                mcal_interrupt_clear_flag
 .text.mcal_gpio_pin_init
                0x000004e2      0x154 ./MCAL/GPIO/gpio.o
                0x000004e2                mcal_gpio_pin_init
 .text.mcal_gpio_pin_write
                0x00000636       0xe2 ./MCAL/GPIO/gpio.o
                0x00000636                mcal_gpio_pin_write
 .text.mcal_gpio_pin_toggle
                0x00000718       0x70 ./MCAL/GPIO/gpio.o
                0x00000718                mcal_gpio_pin_toggle
 .text.mcal_gpio_pin_read
                0x00000788       0x7e ./MCAL/GPIO/gpio.o
                0x00000788                mcal_gpio_pin_read
 .text.hal_led_init
                0x00000806       0x56 ./HAL/LED/led.o
                0x00000806                hal_led_init
 .text.hal_led_set_state
                0x0000085c       0x96 ./HAL/LED/led.o
                0x0000085c                hal_led_set_state
 .text.hal_led_toggle_state
                0x000008f2       0x44 ./HAL/LED/led.o
                0x000008f2                hal_led_toggle_state
 .text.hal_led_get_state
                0x00000936       0x8e ./HAL/LED/led.o
                0x00000936                hal_led_get_state
 .text.hal_button_init
                0x000009c4       0x88 ./HAL/BUTTON/button.o
                0x000009c4                hal_button_init
 .text.hal_button_get_state
                0x00000a4c       0x8e ./HAL/BUTTON/button.o
                0x00000a4c                hal_button_get_state
 .text.main     0x00000ada       0x12 ./main.o
                0x00000ada                main
 .text.libgcc   0x00000aec        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000aec                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000aec        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000aec                exit
                0x00000aec                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000aec        0x4 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000af0                _etext = .

.data           0x00800060        0x0 load address 0x00000af0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./MCAL/port/port.o
 .data          0x00800060        0x0 ./MCAL/e_interrupt/e_interrupt.o
 .data          0x00800060        0x0 ./MCAL/GPIO/gpio.o
 .data          0x00800060        0x0 ./HAL/LED/led.o
 .data          0x00800060        0x0 ./HAL/BUTTON/button.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x0
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800060        0x0 ./MCAL/port/port.o
 .bss           0x00800060        0x0 ./MCAL/e_interrupt/e_interrupt.o
 .bss           0x00800060        0x0 ./MCAL/GPIO/gpio.o
 .bss           0x00800060        0x0 ./HAL/LED/led.o
 .bss           0x00800060        0x0 ./HAL/BUTTON/button.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 c:/program files/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x00800060                PROVIDE (__bss_end, .)
                0x00000af0                __data_load_start = LOADADDR (.data)
                0x00000af0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800060        0x0
                0x00800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800060                PROVIDE (__noinit_end, .)
                0x00800060                _end = .
                0x00800060                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1adc
 *(.stab)
 .stab          0x00000000      0x588 ./MCAL/port/port.o
 .stab          0x00000588      0x4e0 ./MCAL/e_interrupt/e_interrupt.o
                                0x678 (size before relaxing)
 .stab          0x00000a68      0x558 ./MCAL/GPIO/gpio.o
                                0x6f0 (size before relaxing)
 .stab          0x00000fc0      0x540 ./HAL/LED/led.o
                                0x6d8 (size before relaxing)
 .stab          0x00001500      0x420 ./HAL/BUTTON/button.o
                                0x5b8 (size before relaxing)
 .stab          0x00001920      0x1bc ./main.o
                                0x354 (size before relaxing)

.stabstr        0x00000000     0x162a
 *(.stabstr)
 .stabstr       0x00000000     0x162a ./MCAL/port/port.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(CONTROL_ECU.elf elf32-avr)
LOAD linker stubs
